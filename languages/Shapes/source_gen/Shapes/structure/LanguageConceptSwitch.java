package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractShape = 0;
  public static final int Canvas = 1;
  public static final int Circle = 2;
  public static final int Color = 3;
  public static final int ColorReference = 4;
  public static final int Square = 5;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL);
    builder.put(0x2080c055df3aa5aaL, AbstractShape);
    builder.put(0x2080c055df3aa5cbL, Canvas);
    builder.put(0x2080c055df3aa5afL, Circle);
    builder.put(0x2080c055df3b5d72L, Color);
    builder.put(0x2080c055df3c20cbL, ColorReference);
    builder.put(0x2080c055df3aa5c1L, Square);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
