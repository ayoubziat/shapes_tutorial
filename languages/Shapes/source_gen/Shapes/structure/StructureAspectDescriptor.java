package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractShape = createDescriptorForAbstractShape();
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCircle = createDescriptorForCircle();
  /*package*/ final ConceptDescriptor myConceptColor = createDescriptorForColor();
  /*package*/ final ConceptDescriptor myConceptColorReference = createDescriptorForColorReference();
  /*package*/ final ConceptDescriptor myConceptSquare = createDescriptorForSquare();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractShape, myConceptCanvas, myConceptCircle, myConceptColor, myConceptColorReference, myConceptSquare);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractShape:
        return myConceptAbstractShape;
      case LanguageConceptSwitch.Canvas:
        return myConceptCanvas;
      case LanguageConceptSwitch.Circle:
        return myConceptCircle;
      case LanguageConceptSwitch.Color:
        return myConceptColor;
      case LanguageConceptSwitch.ColorReference:
        return myConceptColorReference;
      case LanguageConceptSwitch.Square:
        return myConceptSquare;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "AbstractShape", 0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3aa5aaL);
    b.class_(false, true, false);
    b.origin("r:099aa688-c8df-4293-8354-5b2a4c4cb2b7(Shapes.structure)/2342083281282573738");
    b.version(2);
    b.aggregate("color", 0x2080c055df3c2127L).target(0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3c20cbL).optional(false).ordered(true).multiple(false).origin("2342083281282670887").done();
    b.alias("abstract shape");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Canvas", 0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3aa5cbL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:099aa688-c8df-4293-8354-5b2a4c4cb2b7(Shapes.structure)/2342083281282573771");
    b.version(2);
    b.aggregate("shapes", 0x2080c055df3aa5ceL).target(0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3aa5aaL).optional(true).ordered(true).multiple(true).origin("2342083281282573774").done();
    b.alias("canva");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCircle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Circle", 0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3aa5afL);
    b.class_(false, false, false);
    b.super_("Shapes.structure.AbstractShape", 0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3aa5aaL);
    b.origin("r:099aa688-c8df-4293-8354-5b2a4c4cb2b7(Shapes.structure)/2342083281282573743");
    b.version(2);
    b.property("x", 0x2080c055df3aa5b0L).type(PrimitiveTypeId.INTEGER).origin("2342083281282573744").done();
    b.property("y", 0x2080c055df3aa5b2L).type(PrimitiveTypeId.INTEGER).origin("2342083281282573746").done();
    b.property("radius", 0x2080c055df3aa5b5L).type(PrimitiveTypeId.INTEGER).origin("2342083281282573749").done();
    b.alias("circle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Color", 0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3b5d72L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:099aa688-c8df-4293-8354-5b2a4c4cb2b7(Shapes.structure)/2342083281282620786");
    b.version(2);
    b.alias("color");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColorReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "ColorReference", 0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3c20cbL);
    b.class_(false, false, false);
    b.origin("r:099aa688-c8df-4293-8354-5b2a4c4cb2b7(Shapes.structure)/2342083281282670795");
    b.version(2);
    b.associate("target", 0x2080c055df3c20ccL).target(0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3b5d72L).optional(false).origin("2342083281282670796").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquare() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Square", 0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3aa5c1L);
    b.class_(false, false, false);
    b.super_("Shapes.structure.AbstractShape", 0xe9777cacb110493cL, 0xb6b3cccbe63f4f1cL, 0x2080c055df3aa5aaL);
    b.origin("r:099aa688-c8df-4293-8354-5b2a4c4cb2b7(Shapes.structure)/2342083281282573761");
    b.version(2);
    b.property("upperLeftX", 0x2080c055df3aa5c2L).type(PrimitiveTypeId.INTEGER).origin("2342083281282573762").done();
    b.property("upperLeftY", 0x2080c055df3aa5c4L).type(PrimitiveTypeId.INTEGER).origin("2342083281282573764").done();
    b.property("size", 0x2080c055df3aa5c7L).type(PrimitiveTypeId.INTEGER).origin("2342083281282573767").done();
    b.alias("square");
    return b.create();
  }
}
